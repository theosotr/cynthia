Review = require('./review.js')(sequelize, Sequelize)
Book = require('./book.js')(sequelize, Sequelize)
Author = require('./author.js')(sequelize, Sequelize)
Book.hasMany(Review, {foreignKey: 'book_id'})
Review.belongsTo(Book, {as: Book.tableName, foreignKey: 'book_id'})
Author.hasMany(Book, {foreignKey: 'author_id'})
Book.belongsTo(Author, {as: Author.tableName, foreignKey: 'author_id'})
ret1 = Review.findOne({
include: [
{model: Book, as: Book.tableName, include: [
{model: Author, as: Author.tableName}
]}
],
where: {
  [Op.and]: [
    {[Op.and]: [{'$review.rating$': {[Op.gte]: sequelize.literal(2)}},{'$book.author.surname$': {[Op.substring]: sequelize.literal(`o`)}}]}  ]
},
order: [
  [Book,'title', 'DESC'],  ['reviewer_name', 'ASC'],  ['id', 'DESC']],
offset: 0
})
ret1.then(x => {
  sequelize.close()
    dump(x === null ? x : x.dataValues._default, '_default')
}).catch(x => { sequelize.close(); throw x; })