WrTj = ExpressionWrapper((F('yearly_rent') / F('sale_price')), output_field=FloatField())
MPi = ExpressionWrapper(Value(5), output_field=IntegerField())
jcVbPimsG = ExpressionWrapper(Count(Value('wAi8pi4f'), output_field=FloatField()), output_field=IntegerField())
hj = ExpressionWrapper(F('WrTj'), output_field=FloatField())
cCqQb = ExpressionWrapper(Value(0), output_field=IntegerField())
ret1 = Listing.objects.using('default')
ret2 = ret1.annotate(WrTj=WrTj).annotate(cCqQb=cCqQb).values('yearly_rent', 'id', 'WrTj', 'sale_price', 'cCqQb').annotate(jcVbPimsG=jcVbPimsG).order_by('-id').values('WrTj', 'jcVbPimsG', 'cCqQb')
for r in ret2:

    if(isinstance(r, dict)):
        dump(r.get('WrTj', None), 'WrTj')
    else:
        dump(getattr(r, 'WrTj', None), 'WrTj')

    if(isinstance(r, dict)):
        dump(r.get('jcVbPimsG', None), 'jcVbPimsG')
    else:
        dump(getattr(r, 'jcVbPimsG', None), 'jcVbPimsG')

    if(isinstance(r, dict)):
        dump(r.get('cCqQb', None), 'cCqQb')
    else:
        dump(getattr(r, 'cCqQb', None), 'cCqQb')